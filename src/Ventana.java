
import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author angel
 */
public class Ventana extends javax.swing.JFrame {
    
    

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBAbrirXML = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAEjecutar = new javax.swing.JTextArea();
        jBEjecutar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBAbrirXML.setText("Abrir XML");

        jTextAEjecutar.setColumns(20);
        jTextAEjecutar.setRows(5);
        jScrollPane1.setViewportView(jTextAEjecutar);

        jBEjecutar.setText("Ejecutar");
        jBEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEjecutarActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jBEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBAbrirXML, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBAbrirXML, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jBEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEjecutarActionPerformed
        if (jTextAEjecutar.getText().equals("")) {
            jTextArea2.setText("Error al ejecutar la consulta");
        } else {
            jTextArea2.setText(ejecutaXPath(jTextAEjecutar.getText()));
        }
        
    }//GEN-LAST:event_jBEjecutarActionPerformed

    public String ejecutaXPath(String consulta){
        String cadenaResultado = "";
        
        try{
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            
            Document XMLDoc = factory.newDocumentBuilder().parse(new File("/home/angel/Escritorio/libros.xml"));// creo el Ã¡rbol DOM de la ruta dicha
            
            XPath xPath = XPathFactory.newInstance().newXPath();
            
            XPathExpression exp = xPath.compile(consulta);// pone la consulta deseada
            
            Object result = exp.evaluate(XMLDoc, XPathConstants.NODESET);// ejecuta la consulta
            NodeList nodeList = (NodeList) result;// devuelve el resultado como un nodelist
            System.out.println(nodeList.getLength());
            
            for (int i = 0; i < nodeList.getLength(); i++) {// recorre el nodelist
                if (nodeList.item(i).getNodeName().equals("Libro")) {
                    
                    String datosNodo[] = procesarLibro(nodeList.item(i));
                    
                    cadenaResultado = String.format("%s  \n Publicado en: %s", cadenaResultado, datosNodo[0]);
                    cadenaResultado = String.format("%s  \n El titulo es: %s", cadenaResultado, datosNodo[1]);
                    cadenaResultado = String.format("%s  \n El autor es: %s", cadenaResultado, datosNodo[2]);
                    cadenaResultado = String.format("%s  \n ----------------", cadenaResultado);       
                }
                else{
                    cadenaResultado = cadenaResultado + "\n";
                    nodeList.item(i).getFirstChild().getNodeValue();
                    System.out.println(cadenaResultado);
                }
            }
            return cadenaResultado;
        } 
        catch (Exception e){
            return ("Error: " + e.toString());
        }
    }
    
    private String[] procesarLibro(Node n) {
        
        String datos[] = new String[3];
        Node ntemp = null;
        int contador = 1;
        
        datos[0] = n.getAttributes().item(0).getNodeValue();
        
        NodeList nodos = n.getChildNodes();
        
        for (int i = 0; i < nodos.getLength(); i++) {
            
            ntemp =  (Node) nodos.item(i);
            
            if (ntemp.getNodeType() == Node.ELEMENT_NODE) {
                
                datos[contador] = ntemp.getFirstChild().getNodeValue();
                contador++;
            }         
        }
        
        return datos;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAbrirXML;
    private javax.swing.JButton jBEjecutar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAEjecutar;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
